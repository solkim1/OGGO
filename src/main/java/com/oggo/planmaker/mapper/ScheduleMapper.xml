<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "file:///C:\Users\sr139\OneDrive\Desktop\OGGOSpring\planmakerSpring\src\main\resources\mybatis-3-mapper.dtd">
<mapper namespace="com.oggo.planmaker.mapper.ScheduleMapper">

    <insert id="insertSchedule">
        INSERT INTO tb_schedule (user_id, sche_title, sche_desc, sche_st_dt, sche_st_tm, sche_ed_dt, sche_ed_tm, is_business, is_importance, poi_idx, sche_num)
        VALUES (#{userId}, #{scheTitle}, #{scheDesc}, #{scheStDt}, #{scheStTm}, #{scheEdDt}, #{scheEdTm}, #{isBusiness}, #{isImportance}, #{poiIdx}, #{scheNum})
    </insert>

    <select id="findAllSchedulesByUserId" resultType="com.oggo.planmaker.model.Schedule">
        SELECT
            sche_idx AS scheIdx,
            user_id AS userId,
            sche_title AS scheTitle,
            sche_desc AS scheDesc,
            sche_st_dt AS scheStDt,
            sche_st_tm AS scheStTm,
            sche_ed_dt AS scheEdDt,
            sche_ed_tm AS scheEdTm,
            is_business AS isBusiness,
            is_importance AS isImportance,
            poi_idx AS poiIdx,
            sche_num AS scheNum
        FROM tb_schedule
        WHERE user_id = #{userId}
        ORDER BY sche_st_dt DESC, sche_st_tm ASC
    </select>

    <select id="findByBusinessFlag" resultType="com.oggo.planmaker.model.Schedule">
        SELECT
            sche_idx AS scheIdx,
            user_id AS userId,
            sche_title AS scheTitle,
            sche_desc AS scheDesc,
            sche_st_dt AS scheStDt,
            sche_st_tm AS scheStTm,
            sche_ed_dt AS scheEdDt,
            sche_ed_tm AS scheEdTm,
            is_business AS isBusiness,
            is_importance AS isImportance,
            poi_idx AS poiIdx,
            sche_num AS scheNum
        FROM tb_schedule
        WHERE user_id = #{userId} AND is_business = #{isBusiness}
        ORDER BY sche_st_dt DESC, sche_st_tm ASC
    </select>

    <select id="findImportantSchedules" resultType="com.oggo.planmaker.model.Schedule">
        SELECT
            sche_idx AS scheIdx,
            user_id AS userId,
            sche_title AS scheTitle,
            sche_desc AS scheDesc,
            sche_st_dt AS scheStDt,
            sche_st_tm AS scheStTm,
            sche_ed_dt AS scheEdDt,
            sche_ed_tm AS scheEdTm,
            is_business AS isBusiness,
            is_importance AS isImportance,
            poi_idx AS poiIdx,
            sche_num AS scheNum
        FROM tb_schedule
        WHERE user_id = #{userId} AND is_importance = 'Y'
        ORDER BY sche_st_dt DESC, sche_st_tm ASC
    </select>

    <update id="updateImportanceByScheNum">
        UPDATE tb_schedule
        SET is_importance = CASE WHEN is_importance = 'Y' THEN 'N' ELSE 'Y' END
        WHERE sche_idx = #{scheNum}
    </update>

    <delete id="deleteByScheNum">
        DELETE FROM tb_schedule
        WHERE sche_idx = #{scheNum}
    </delete>

    <update id="updateSchedule">
        UPDATE tb_schedule
        SET sche_title = #{scheTitle}, sche_desc = #{scheDesc}
        WHERE sche_idx = #{scheIdx}
    </update>

    <select id="getLastScheNum" resultType="int">
        SELECT COALESCE(MAX(sche_num), 0) FROM tb_schedule
    </select>

</mapper>